module.exports.config = {
    name: "cudi",
    version: "2.0.0",
    hasPermssion: 1,
    credits: "...",
    description: "ржПржХрж╛ржзрж┐ржХ ржмрзНржпржХрзНрждрж┐ржХрзЗ ржЯрзНржпрж╛ржЧ ржХрж░рзЗ ржХрзНрж░ржорж╛ржЧржд ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржмрзЗ, /cudi off ржжрж┐рж▓рзЗ ржмржирзНржз рж╣ржмрзЗред",
    commandCategory: "fun",
    usages: "/cudi @mention1 @mention2 ... | /cudi off",
    cooldowns: 10
};

let activeThreads = {}; // ржЪрж╛рж▓рзБ ржерж╛ржХрж╛ ржерзНрж░рзЗржб ржЯрзНрж░рзНржпрж╛ржХ ржХрж░ржмрзЗ

module.exports.run = async function({ api, event, args }) {
    let threadID = event.threadID;
    let command = args[0];

    // ржпржжрж┐ "/cudi off" ржжрзЗрзЯрж╛ рж╣рзЯ, рждрж╛рж╣рж▓рзЗ ржмржирзНржз ржХрж░рзЗ ржжрзЗржмрзЗ
    if (command === "off") {
        if (activeThreads[threadID]) {
            clearInterval(activeThreads[threadID]); // рж▓рзБржк ржмржирзНржз
            delete activeThreads[threadID];
            return api.sendMessage("тЬЕ Cudi ржмржирзНржз рж╣рзЯрзЗ ржЧрзЗржЫрзЗ!", threadID);
        } else {
            return api.sendMessage("Cudi ржЖржЧрзЗ ржерзЗржХрзЗржЗ ржмржирзНржз ржЖржЫрзЗ!", threadID);
        }
    }

    // ржорзЗржирж╢ржи ржХрж░рж╛ ржЗржЙржЬрж╛рж░ржжрзЗрж░ ржмрзЗрж░ ржХрж░рж╛
    let mentions = event.mentions;
    if (Object.keys(mentions).length === 0) {
        return api.sendMessage("тЪая╕П ржжрзЯрж╛ ржХрж░рзЗ ржЕржирзНрждржд ржПржХржЬржиржХрзЗ @mention ржХрж░рзБржи!", threadID);
    }

    let mentionData = Object.keys(mentions).map(id => ({ id, tag: mentions[id] }));
    
    // ржпржжрж┐ ржЖржЧрзЗ ржерзЗржХрзЗржЗ ржЪрж╛рж▓рзБ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ ржмрж╛рж░рзНрждрж╛ ржжрзЗрзЯ
    if (activeThreads[threadID]) {
        return api.sendMessage("тЪая╕П Cudi ржЗрждрж┐ржоржзрзНржпрзЗ ржЪрж╛рж▓рзБ ржЖржЫрзЗ! ржмржирзНржз ржХрж░рждрзЗ /cudi off ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред", threadID);
    }

    // рж▓рзБржк ржЪрж╛рж▓рзБ ржХрж░рж╛
    activeThreads[threadID] = setInterval(() => {
        let messages = [
            "ржЪрзБржжрж╛ рж▓рзЛ {name}!",
            "ржЦрж╛ржВржХрж┐рж░ ржкрзЛрж▓рж╛ {name} рждрж░ ржорж╛рж░рзЗ ржЪрзБржжрж┐ ЁЯе░ред",
            "ржЦрж╛ржВржХрж┐рж░ ржкрзЛрж▓рж╛ {name} рждрж░ ржХржЪрж┐ ржмрзЛржи рж░рзЗ ржЪрзБржжрж┐ ЁЯШН..",
            "ржорж╛ржжрж╛рж░ржЪрзЛржж {name} рждрж░ ржЖржорзНржорзБ ржкржо ржкржо ржЦрж╛ржВржХрж┐рж░ ржкрзЛ ЁЯР░",
            "ржЦрж╛ржВржХрж┐рж░ ржкрзЛрж▓рж╛ {name} рждрж░ ржХржЪрж┐ ржнрзБржжрж╛рзЯ ржнрзБржжрж╛рзЯ ржХрж╛ржорж░ ржжрж┐ржорзБ ЁЯТФ!"
        ];

        mentionData.forEach((mention, index) => {
            setTimeout(() => {
                let msg = messages[Math.floor(Math.random() * messages.length)].replace("{name}", mention.tag);
                api.sendMessage({ body: msg, mentions: [mention] }, threadID);
            }, index * 5000); // ржкрзНрж░рждрж┐ржЯрж┐ ржорзЗрж╕рзЗржЬрзЗрж░ ржоржзрзНржпрзЗ рзл рж╕рзЗржХрзЗржирзНржб ржЧрзНржпрж╛ржк
        });

    }, 20000); // ржкрзНрж░рждрж┐ рзирзж рж╕рзЗржХрзЗржирзНржбрзЗ ржПржХржмрж╛рж░ рж░рж┐ржкрж┐ржЯ рж╣ржмрзЗ

    return api.sendMessage("тЬЕ Cudi ржЪрж╛рж▓рзБ рж╣рзЯрзЗржЫрзЗ!", threadID);
};
